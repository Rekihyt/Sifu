# How something similar to do notation might be work

# Basically just `traverse_` from Haskell, with the idea that the list has already
# been evaluated (eager evaluation) so we just preserve type info.
Do [] -> () : Eff eff-set
Do {} -> () : Eff eff-set
Do ((x :> xs) : List _ (Eff eff-set)) -> x <> Do xs 
Do ((x -| xs) : Set _ (Eff eff-set)) -> x <> Do xs


MyApp -> Do {
	SomeIO Arg1
	result <- OtherIO Arg2
	FinalIO Arg3
}
